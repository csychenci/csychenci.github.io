(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[174],{Gnkk:function(e,n,a){"use strict";a.r(n);var t=a("q1tI"),l=a.n(t),r=a("dEAq"),m=(a("0H/f"),a("N0lm"),a("DgDr"),a("cGlH"),a("ekZX"),a("Bjia")),i=(a("tVxl"),a("1pSt"),l.a.memo((e=>{e.demos;return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h2",{id:"hashmap"},l.a.createElement(r["AnchorLink"],{to:"#hashmap","aria-hidden":"true",tabIndex:-1},l.a.createElement("span",{className:"icon icon-link"})),"HashMap"),l.a.createElement("hr",null),l.a.createElement("ol",null,l.a.createElement("li",null,"\u4ec0\u4e48\u662f HashMap")),l.a.createElement("ul",null,l.a.createElement("li",null,"\u5b83\u4ee5\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u5b58\u50a8\u6570\u636e\uff0c\u4e00\u4e2a\u952e(Key)\u5bf9\u5e94\u4e00\u4e2a\u503c(Value)\u7684\u8fd9\u6837\u4e00\u79cd\u6620\u5c04\u5173\u7cfb\u3002\u800c HashMap \u7684\u5185\u90e8\u5b9e\u73b0\u4f7f\u7528\u4e86 Hash \u51fd\u6570\uff0c\u5b83\u51b3\u5b9a\u4e86\u5982\u4f55\u5728\u5185\u5b58\u4e2d\u5b58\u653e K \u548c V"),l.a.createElement("li",null,"\u5b83\u7684\u9002\u7528\u573a\u666f\u662f\u901a\u8fc7 K(\u4efb\u4f55\u7c7b\u578b) \u6765\u5bfb\u627e\u6570\u636e\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u7d22\u5f15")),l.a.createElement("ol",{start:2},l.a.createElement("li",null,"\u521b\u5efa HashMap")),l.a.createElement("ul",null,l.a.createElement("li",null,"HashMap::new()\uff1a\u521b\u5efa\u4e00\u4e2a HashMap\u3002\u9700\u8981\u63d0\u4f9b HashMap \u7684\u7c7b\u578b\uff0c\u5426\u5219\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a\u4e0d\u63d0\u4f9b\u7684\u8bdd rust \u5c31\u65e0\u6cd5\u63a8\u65ad\u51fa HashMap \u7684\u7c7b\u578b\u3002\u4e5f\u53ef\u4ee5\u521b\u5efa\u4ee5\u540e\u9a6c\u4e0a\u4e3a HashMap \u6dfb\u52a0\u6570\u636e\uff0c\u8fd9\u6837 rust \u5c31\u80fd\u63a8\u65ad\u51fa\u5b83\u7684\u7c7b\u578b\u4e86"),l.a.createElement("li",null,"insert(&mut self, k: K, v: V)\uff1a\u6dfb\u52a0\u6570\u636e")),l.a.createElement(m["a"],{code:"// HashMap \u4e0d\u5728 prelude \u4e2d\uff0c\u9700\u8981\u5f15\u5165\nuse std::collections::HashMap;\n\nfn main () {\n    let mut scores:HashMap<String,i32> = HashMap::new();\n}",lang:"rs"}),l.a.createElement("ul",null,l.a.createElement("li",null,"HashMap \u4e0d\u5728 prelude \u4e2d\uff0c\u9700\u8981\u624b\u52a8\u5f15\u5165\u3002\u800c\u4e14\u6807\u51c6\u5e93\u5bf9\u5176\u652f\u6301\u4e5f\u6bd4\u8f83\u5c11\uff0c\u6ca1\u6709\u5185\u7f6e\u7684\u5b8f\u6765\u521b\u5efa HashMap\u3002HashMap \u548c vertor \u4e00\u6837\uff0c\u6570\u636e\u5b58\u50a8\u5728 heap \u4e5f\u5c31\u662f\u5806\u7a7a\u95f4\u4e0a\u3002\u5b83\u8fd8\u662f\u540c\u6784\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5728\u540c\u4e00\u4e2a HashMap \u4e2d\uff0c\u5b83\u7684 K \u5fc5\u987b\u662f\u540c\u4e00\u4e2a\u7c7b\u578b\uff0c\u5b83\u7684 V \u4e5f\u5fc5\u987b\u662f\u540c\u4e00\u79cd\u7c7b\u578b"),l.a.createElement("li",null,"collect()\uff1a\u53e6\u4e00\u79cd\u521b\u5efa HashMap \u7684\u65b9\u5f0f\uff0c\u901a\u8fc7\u5728\u5143\u7d20\u7c7b\u578b\u4e3a Tuple \u7684 Vector \u4e0a\u4f7f\u7528 collect \u65b9\u6cd5\uff0c\u53ef\u4ee5\u7ec4\u5efa\u4e00\u4e2a HashMap\uff0c\u8fd9\u79cd\u65b9\u5f0f\u8981\u6c42 Tuple \u6709\u4e24\u4e2a\u503c\uff0c\u4e00\u4e2a\u4f5c\u4e3a K\uff0c\u53e6\u4e00\u4e2a\u4f5c\u4e3a V"),l.a.createElement("li",null,"collect \u65b9\u6cd5\u53ef\u4ee5\u628a\u6570\u636e\u6574\u5408\u6210\u5f88\u591a\u79cd\u96c6\u5408\u7c7b\u578b\uff0c\u5305\u62ec HashMap\uff0c\u4f46\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u9700\u8981\u663e\u5f0f\u6307\u660e")),l.a.createElement(m["a"],{code:'fn main () {\n    let teams = vec![String::from("Blue"),String::from("Red")];\n    let intial_scores = vec![10.50];\n\n    let scores:HashMap<_,_> = teams.iter().zip(intial_scores.iter()).collect();\n    // rust \u53ef\u4ee5\u6839\u636e vector \u4e2d\u7684\u7c7b\u578b\u63a8\u5bfc\u51fa Key \u548c Value \u7684\u7c7b\u578b\n}',lang:"rs"}),l.a.createElement("ol",{start:3},l.a.createElement("li",null,"HashMap \u548c\u6240\u6709\u6743")),l.a.createElement("ul",null,l.a.createElement("li",null,"\u5728\u4f7f\u7528 HashMap \u5b58\u50a8\u6570\u636e\u65f6\uff0c\u5bf9\u4e8e\u5b9e\u73b0\u4e86 Copy trait \u7684\u7c7b\u578b(\u4f8b\u5982 i32)\uff0c\u503c\u4f1a\u88ab\u590d\u5236\u5230 HashMap \u4e2d\uff1b\u800c\u5bf9\u4e8e\u62e5\u6709\u6240\u6709\u6743\u7684\u503c(\u4f8b\u5982 String)\uff0c\u503c\u4f1a\u88ab\u79fb\u52a8\uff0c\u6240\u6709\u6743\u4f1a\u8f6c\u79fb\u7ed9 HashMap")),l.a.createElement(m["a"],{code:'fn main () {\n    let k_name = String::from("name");\n    let v_name = String::from("xiaoming");\n\n    let mut usermap = HashMap::new();\n    usermap.insert(k_name,v_name);\n\n    println!("{},{}",k_name,v_name);\n    //error:  borrow of moved value: `k_name`\n}',lang:"rs"}),l.a.createElement("ul",null,l.a.createElement("li",null,"\u4f46\u5982\u679c\u5c06\u503c\u7684\u5f15\u7528\u63d2\u5165\u5230 HashMap\uff0c\u503c\u672c\u8eab\u5c31\u4e0d\u4f1a\u53d1\u751f\u79fb\u52a8\uff0c\u53d8\u91cf\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u3002\u5728 HashMap \u6709\u6548\u7684\u671f\u95f4\uff0c\u88ab\u5f15\u7528\u7684\u503c\u5fc5\u987b\u4fdd\u6301\u6709\u6548")),l.a.createElement(m["a"],{code:'fn main () {\n    let k_name = String::from("name");\n    let mut v_name = String::from("xiaoming");\n\n    let mut usermap = HashMap::new();\n    usermap.insert(&k_name,&v_name);\n\n    println!("{},{}",k_name,v_name);\n}',lang:"rs"}),l.a.createElement("ol",{start:4},l.a.createElement("li",null,"\u8bbf\u95ee HashMap \u4e2d\u7684\u503c")),l.a.createElement("ul",null,l.a.createElement("li",null,"get(K) -> Option<V>")),l.a.createElement(m["a"],{code:'fn main () {\n    let k_name = String::from("name");\n    let v_name = String::from("xiaoming");\n\n    let k_id = String::from("id");\n    let v_id = String::from("1234567");\n\n    let v_id_copy = String::from("1234567");\n\n    let mut usermap = HashMap::new();\n    usermap.insert(&k_name, &v_name);\n    usermap.insert(k_id, v_id);\n\n    let user_id = usermap.get(v_id_copy);\n\n    match usermap.get(&k_name) {\n        Some(name) => println!("{}", name),\n        None => println!("name not exist!"),\n    }\n\n    match user_id {\n        Some(id) => println!("id:{}", id),\n        None => println!("id not exist!"),\n    }\n    // xiaoming\n    // id not exist! \n}',lang:"rs"}),l.a.createElement("ol",{start:5},l.a.createElement("li",null,"\u904d\u5386 HashMap")),l.a.createElement(m["a"],{code:'fn main() {\n        let k_name = String::from("name");\n    let v_name = String::from("xiaoming");\n\n\n    let k_id = String::from("id");\n    let v_id = String::from("1234567");\n\n    let mut usermap = HashMap::new();\n    usermap.insert(&k_name,&v_name);\n    usermap.insert(&k_id,&v_id);\n\n    // \u4f7f\u7528\u6a21\u5f0f\u5339\u914d\n    for (k,v) in &usermap {\n        println!("k:{},v:{}",k,v);\n    }\n\n    // k:id,v:1234567\n    // k:name,v:xiaoming\n}',lang:"rs"}),l.a.createElement("ol",{start:6},l.a.createElement("li",null,"\u66f4\u65b0 HashMap")),l.a.createElement("ul",null,l.a.createElement("li",null,"HashMap \u7684\u5927\u5c0f\u662f\u53ef\u53d8\u7684\uff0c\u4e5f\u5c31\u662f\u952e\u503c\u5bf9\u662f\u53ef\u53d8\u7684\uff0c\u6bcf\u4e2a K \u540c\u65f6\u53ea\u80fd\u5bf9\u5e94\u4e00\u4e2a V"),l.a.createElement("li",null,"\u5f53 K \u5df2\u5b58\u5728\u65f6\uff0c\u540e\u7eed\u63d2\u5165\u7684 KV \u4e2d\uff0cK \u76f8\u540c\u800c V \u4e0d\u540c\uff0c\u90a3\u4e48\u539f\u6765\u7684 V \u4f1a\u88ab\u66ff\u6362")),l.a.createElement(m["a"],{code:'fn main () {\n    let mut usermap = HashMap::new();\n    usermap.insert(String::from("name"),String::from("xiaoming"));\n    usermap.insert(String::from("name"),String::from("xiaohong"));\n    // usermap.insert(&k_id,&v_id);\n\n    println!("{:?}",usermap);\n    // {"name": "xiaohong"}\n}',lang:"rs"}),l.a.createElement("ul",null,l.a.createElement("li",null,"\u5f53 K \u4e0d\u5b58\u5728\u65f6\uff0c\u624d\u8fdb\u884c\u63d2\u5165 V\u3002\u53ef\u4ee5\u4f7f\u7528 entry() \u65b9\u6cd5\uff0c\u8fd4\u56de\u503c\u662f enum Entry\uff0c\u8868\u793a\u503c\u662f\u5426\u5b58\u5728\uff1bentry.or_insert()\uff0c\u5982\u679c K \u5b58\u5728\uff0c\u8fd4\u56de\u5230\u5bf9\u5e94\u7684 V \u7684\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\uff1b\u5982\u679c K \u4e0d\u5b58\u5728\uff0c\u5c06\u65b9\u6cd5\u53c2\u6570\u4f5c\u4e3a K \u7684\u65b0\u503c\u63d2\u5165\u8fdb\u5165\uff0c\u8fd4\u56de\u5230\u8fd9\u4e2a\u65b0\u503c\u7684\u53ef\u53d8\u5f15\u7528")),l.a.createElement(m["a"],{code:'fn main () {\n    let mut usermap = HashMap::new();\n    usermap.insert(String::from("name"),String::from("xiaoming"));\n\n    let name_entry = usermap.entry(String::from("name"));\n    // Entry(OccupiedEntry { key: "name", value: "xiaoming", .. })\n    println!("{:?}",name_entry);\n\n    name_entry.or_insert(String::from("xiaohong"));\n\n    usermap.entry(String::from("id")).or_insert(String::from("123456"));\n\n    println!("{:?}",usermap);\n    // {"id": "123456", "name": "xiaoming"}\n}',lang:"rs"}),l.a.createElement("ul",null,l.a.createElement("li",null,"\u8fd8\u53ef\u4ee5\u57fa\u4e8e\u73b0\u6709 K \u6765\u66f4\u65b0 V")),l.a.createElement(m["a"],{code:'/** \n  * split_whitespace: \u5207\u5272\u5b57\u7b26\u4e32\uff0c\u4ee5\u7a7a\u683c\u4f5c\u4e3a\u5207\u5272\u7b26\u53f7\n*/\nfn main () {\n    let text = "tree red flower water tree water black";\n\n    let mut nummap = HashMap::new();\n\n    for word in text.split_whitespace() {\n        let count = nummap.entry(word).or_insert(0);\n        *count += 1;\n    }\n\n    println!("{:?}",nummap);\n    // {"red": 1, "black": 1, "tree": 2, "flower": 1, "water": 2}\n}',lang:"rs"}),l.a.createElement("ol",{start:7},l.a.createElement("li",null,"Hash \u51fd\u6570")),l.a.createElement("ul",null,l.a.createElement("li",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cHashMap \u4f7f\u7528\u52a0\u5bc6\u529f\u80fd\u5f3a\u5927\u7684 Hash \u51fd\u6570\uff0c\u53ef\u4ee5\u62b5\u6297\u62d2\u7edd\u670d\u52a1\u653b\u51fb(Dos)\u3002\u867d\u7136\u5b83\u4e0d\u662f\u53ef\u7528\u7684\u6700\u5feb\u7684 Hash \u7b97\u6cd5\uff0c\u4f46\u5177\u6709\u66f4\u597d\u5b89\u5168\u6027"),l.a.createElement("li",null,"\u5982\u679c\u4f60\u611f\u89c9\u5b83\u7684\u6027\u80fd\u4e0d\u597d\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e0d\u540c\u7684 hasher \u6765\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u51fd\u6570\u3002\u8fd9\u4e2a hasher \u662f\u6307\u5b9e\u73b0\u4e86 BuildHasher trait \u7684\u7c7b\u578b"))))})));n["default"]=e=>{var n=l.a.useContext(r["context"]),a=n.demos;return l.a.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r["AnchorLink"].scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),l.a.createElement(i,{demos:a})}}}]);